%section#timeline
  %section.timeline-container.container
    .timeline-vertical-line
    - if current_user && current_user.id == @user.id
      .add-new-media-container.m-bottom-20
        = link_to pages_select_media_path(reel: @reel) do
          .add-new-media
            %i.fa.fa-plus-circle
            Add to Reel
    %section.media-section
      - @media.each do |medium|
        - if medium.is_a? Image
          .row.media-container
            .section-description.col-sm-6
              .timeline-teaser{:style => "background-image: url(#{medium.photo.url})"}
              %p= medium.created_at.strftime("%b %-d, %Y")
              -if current_user && current_user.id == @user.id
                %a.media-edit{"data-toggle" => "modal", "data-target" => "#edit-modal", "data-medium" => "#{medium.id}"}
                  %i.fa.fa-pencil-square-o
                  Edit
              %p.timeline-description= medium.description
            .row
              .section-media.col-sm-11.col-sm-offset-1
                .section-photo-container
                  %img.section-photo{"src" => "#{medium.photo.url}"}
          .media-comments-icon
            = link_to like_image_path(medium), method: :put, remote: true, class: "footer-link vote" do
              - if current_user && current_user.voted_on?(medium)
                %i.fa.fa-hand-peace-o.media-comments-icon-on
              - else
                %i.fa.fa-hand-peace-o
              - if medium.score < 1
                .engagement-badge.badge{"data-id" => "#{medium.id}", class: "votes-count", style: "display: none"}= medium.score
              - else
                .engagement-badge.badge{"data-id" => "#{medium.id}", class: "votes-count"}= medium.score
            %a.comment-btn-expand{:id => "#{medium.id}"}
              %i.fa.fa-comment-o{:id => "#{medium.id}"}
              - if medium.comment_threads.count > 0
                .engagement-badge.badge{:id => "#{medium.id}"}= medium.comment_threads.count
          .media-comment-section.hidden{:id => "comments-id-#{medium.id}"}
            - if current_user
              .row-fluid.m-top-20
                .col-md-2
                  .timeline-teaser{style: "background-image:url(#{current_user.avatar.url})"}
                  %b= current_user.first_name + " " + current_user.last_name
                  %small Now
                .col-sm-10
                  = render :partial => 'comments/form', :locals => { :comment => Comment.build_from(medium, current_user.id, "") }
            - else
              = render :partial => 'comments/form_login'
            = render :partial => 'comments/comment', :collection => medium.root_comments.order('created_at desc'), :as => :comment, :locals => { :reel_user => @user.id }
        - if medium.is_a? Story
          - if medium.photo.present?
            .row.media-container
              .section-description.col-sm-6
                .timeline-teaser{:style => "background-image: url(#{medium.photo.url})"}
                %p= medium.created_at.strftime("%b %-d, %Y")
                -if current_user && current_user.id == @user.id
                  %a.media-edit{"data-toggle" => "modal", "data-target" => "#edit-modal", "data-medium" => "#{medium.id}"}
                    %i.fa.fa-pencil-square-o
                    Edit
                %h4= medium.title
              .row
                .section-media.col-sm-11.col-sm-offset-1
                  .section-photo-container
                    %img.section-photo{"src" => "#{medium.photo.url}"}
                  %p.story-container= sanitize(medium.body)
            .media-comments-icon
              -# = link_to like_image_path(medium), method: :put, remote: true, class: "footer-link vote" do
              -#   - if current_user && current_user.voted_on?(medium)
              -#     -# %span.action-props-on
              -#     %i.fa.fa-hand-peace-o.media-comments-icon-on
              -#   - else
              -#     -# %span.action-props-off
              -#     %i.fa.fa-hand-peace-o
              -#   - if medium.score < 1
              -#     .engagement-badge.badge{"data-id" => "#{medium.id}", class: "votes-count", style: "display: none"}= medium.score
              -#   - else
              -#     .engagement-badge.badge{"data-id" => "#{medium.id}", class: "votes-count"}= medium.score
              %a.comment-btn-expand{:id => "#{medium.id}"}
                %i.fa.fa-comment-o{:id => "#{medium.id}"}
                - if medium.comment_threads.count > 0
                  .engagement-badge.badge{:id => "#{medium.id}"}= medium.comment_threads.count
            .media-comment-section.hidden{:id => "comments-id-#{medium.id}"}
              - if current_user
                .row-fluid.m-top-20
                  .col-md-2
                    .timeline-teaser{style: "background-image:url(#{current_user.avatar.url})"}
                    %b= current_user.first_name + " " + current_user.last_name
                    %small Now
                  .col-sm-10
                    = render :partial => 'comments/form', :locals => { :comment => Comment.build_from(medium, current_user.id, "") }
              - else
                = render :partial => 'comments/form_login'
              = render :partial => 'comments/comment', :collection => medium.root_comments.order('created_at desc'), :as => :comment, :locals => { :reel_user => @user.id }
          - else
            .row.media-container
              .section-description.col-sm-6
                %p= medium.created_at.strftime("%b %-d, %Y")
                -if current_user && current_user.id == @user.id
                  %a.media-edit{"data-toggle" => "modal", "data-target" => "#edit-modal", "data-medium" => "#{medium.id}"}
                    %i.fa.fa-pencil-square-o
                    Edit
                %h4= medium.title
              .row
                .section-media.col-sm-11.col-sm-offset-1
                  %p.story-container= sanitize(medium.body)
            .media-comments-icon
              -# = link_to like_image_path(medium), method: :put, remote: true, class: "footer-link vote" do
              -#   - if current_user && current_user.voted_on?(medium)
              -#     -# %span.action-props-on
              -#     %i.fa.fa-hand-peace-o.media-comments-icon-on
              -#   - else
              -#     -# %span.action-props-off
              -#     %i.fa.fa-hand-peace-o
              -#   - if medium.score < 1
              -#     .engagement-badge.badge{"data-id" => "#{medium.id}", class: "votes-count", style: "display: none"}= medium.score
              -#   - else
              -#     .engagement-badge.badge{"data-id" => "#{medium.id}", class: "votes-count"}= medium.score
              %a.comment-btn-expand{:id => "#{medium.id}"}
                %i.fa.fa-comment-o{:id => "#{medium.id}"}
                - if medium.comment_threads.count > 0
                  .engagement-badge.badge{:id => "#{medium.id}"}= medium.comment_threads.count
            .media-comment-section.hidden{:id => "comments-id-#{medium.id}"}
              - if current_user
                .row-fluid.m-top-20
                  .col-md-2
                    .timeline-teaser{style: "background-image:url(#{current_user.avatar.url})"}
                    %b= current_user.first_name + " " + current_user.last_name
                    %small Now
                  .col-sm-10
                    = render :partial => 'comments/form', :locals => { :comment => Comment.build_from(medium, current_user.id, "") }
              - else
                = render :partial => 'comments/form_login'
              = render :partial => 'comments/comment', :collection => medium.root_comments.order('created_at desc'), :as => :comment, :locals => { :reel_user => @user.id }
        -if medium.is_a? Video
          .row.media-container
            .section-description.col-sm-6
              .timeline-teaser{:style => "background-image: url(#{medium.screenshot_url}); background-size: 180%;"}
              %p= medium.created_at.strftime("%b %-d, %Y")
              -if current_user && current_user.id == @user.id
                %a.media-edit{"data-toggle" => "modal", "data-target" => "#edit-modal", "data-medium" => "#{medium.id}"}
                  %i.fa.fa-pencil-square-o
                  Edit
              %p.timeline-description= medium.description
            .row
              .section-media.col-sm-11.col-sm-offset-1
                %iframe{"src" => "#{medium.embed_url}?rel=0&amp;showinfo=0", "frameborder" => "0"}
          .media-comments-icon
            = link_to like_video_path(medium), method: :put, remote: true, class: "footer-link vote" do
              - if current_user && current_user.voted_on?(medium)
                -# %span.action-props-on
                %i.fa.fa-hand-peace-o.media-comments-icon-on
              - else
                -# %span.action-props-off
                %i.fa.fa-hand-peace-o
              - if medium.score < 1
                .engagement-badge.badge{"data-id" => "#{medium.id}", class: "votes-count", style: "display: none"}= medium.score
              - else
                .engagement-badge.badge{"data-id" => "#{medium.id}", class: "votes-count"}= medium.score
            %a.comment-btn-expand{:id => "#{medium.id}"}
              %i.fa.fa-comment-o{:id => "#{medium.id}"}
              - if medium.comment_threads.count > 0
                .engagement-badge.badge{:id => "#{medium.id}"}= medium.comment_threads.count
          .media-comment-section.hidden{:id => "comments-id-#{medium.id}"}
            - if current_user
              .row-fluid.m-top-20
                .col-md-2
                  .timeline-teaser{style: "background-image:url(#{current_user.avatar.url})"}
                  %b= current_user.first_name + " " + current_user.last_name
                  %small Now
                .col-sm-10
                  = render :partial => 'comments/form', :locals => { :comment => Comment.build_from(medium, current_user.id, "") }
            - else
              = render :partial => 'comments/form_login'
            = render :partial => 'comments/comment', :collection => medium.root_comments.order('created_at desc'), :as => :comment, :locals => { :reel_user => @user.id }
  - if current_user && current_user.id == @user.id
    %section.timeline-bottom.timeline-blank
  - else
    %section.timeline-bottom.container
      .row
        .col-sm-12
          #timeline-bottom-teaser.text-center
            %h3
              Like what you see? Here are more reels from
              = link_to user_path(@reel.user) do
                = @user.first_name + " " + @user.last_name + "."
      .content-container.tab-pane.active#work
        .tab-content
          .tab-pane.active#reels
            - @user.reels.each do |reel|
              =render :partial => 'shared/teaser', :locals => {:reel => reel}
            .jumbotron.bottom-jumbotron-cta.text-center
              %h2
                Feeling Inspired? Share Your Passion!
              %small
                Stories, videos, images. Anything goes. It's easy & fun!
              %br
              = link_to new_reel_path do
                .teaser
                  %i.fa.fa-plus
                  %br
                  Create a reel
