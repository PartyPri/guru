%section#timeline
  %section.timeline-container.container
    .timeline-vertical-line
    - if current_user && current_user.id == @user.id
      .add-new-media-container.m-bottom-20.dropdown
        -# = link_to pages_select_media_path(reel: @reel) do
        .btn.btn-default.add-new-media.dropdown-toggle{"type" => "button", "data-toggle" => "dropdown", "aria-haspopup" => "true", "aria-expanded" => "true"}
          %i.fa.fa-plus-circle
          Add to Reel
        .notifications-dropdown.dropdown-menu
          %li.notification-item
            %a{:href => "/videos/new?reel=#{@reel.id}"}
              =image_tag 'select_media_image.png'
              Add an image
          %li.notification-item
            %a{:href => "/videos/new?reel=#{@reel.id}"}
              =image_tag 'select_media_video.png'
              Add a video
          %li.notification-item
            %a{:href => "/stories/new?reel=#{@reel.id}"}
              =image_tag 'select_media_story.png'
              Add a story
    %section.media-section
      - @media.each do |medium|
        - if medium.is_a? Image
          .row.media-container{:id => "media-#{medium.id}"}
            .section-description.col-sm-2
              .timeline-teaser{:style => "background-image: url(#{medium.photo.url})"}
              %p= medium.created_at.strftime("%b %-d, %Y")
              -if current_user && current_user.id == @user.id
                %a.media-edit{"data-toggle" => "modal", "data-target" => "#edit-modal", "data-medium" => "#{medium.id}"}
                  %i.fa.fa-pencil-square-o
                  Edit
              %p.timeline-description= truncate(medium.description, length: 250)
              .media-engagement-icon.hidden-xs
                = render partial: 'shared/engagement_icons', :locals => { :medium => medium, :title => "#{truncate(medium.description, length: 25)}", :like_path => like_image_path(medium), :share_image => "#{medium.photo.url}"}
            .section-media.col-sm-10
              .section-photo-container
                %img.section-photo{"src" => "#{medium.photo.url}"}
                .media-engagement-icon.visible-xs
                  = render partial: 'shared/engagement_icons', :locals => { :medium => medium, :title => "#{truncate(medium.description, length: 25)}", :like_path => like_image_path(medium), :share_image => "#{medium.photo.url}"}
              %input.comment-toggle-check.hidden{:type => "checkbox", :id => "comments-toggle-id-#{medium.id}"}
              .media-comment-section{:id => "comments-id-#{medium.id}"}
                - if current_user
                  .row-fluid.m-top-20
                    .col-sm-2
                      .timeline-teaser{style: "background-image:url(#{current_user.avatar.url})"}
                    .col-sm-10
                      = render :partial => 'comments/form', :locals => { :comment => Comment.build_from(medium, current_user.id, "") }
                - else
                  = render :partial => 'comments/form_login'
                = render :partial => 'comments/comment', :collection => medium.root_comments.order('created_at desc'), :as => :comment, :locals => { :reel_user => @user.id }

        - if medium.is_a? Story
          - if medium.photo.present?
            .row.media-container{:id => "media-#{medium.id}"}
              .section-description.col-sm-2
                .timeline-teaser{:style => "background-image: url(#{medium.photo.url})"}
                %p= medium.created_at.strftime("%b %-d, %Y")
                -if current_user && current_user.id == @user.id
                  %a.media-edit{"data-toggle" => "modal", "data-target" => "#edit-modal", "data-medium" => "#{medium.id}"}
                    %i.fa.fa-pencil-square-o
                    Edit
                %h4= medium.title
                .media-engagement-icon.hidden-xs
                  = render partial: 'shared/engagement_icons', :locals => { :medium => medium, :title => "#{medium.title}", :like_path => like_story_path(medium), :share_image => "#{medium.photo.url}"}
              .section-media.col-sm-10
                .section-photo-container
                  %img.section-photo{"src" => "#{medium.photo.url}"}
                %p.story-container= sanitize(medium.body)
                .media-engagement-icon.visible-xs
                  = render partial: 'shared/engagement_icons', :locals => { :medium => medium, :title => "#{medium.title}", :like_path => like_story_path(medium), :share_image => "#{medium.photo.url}"}
                %input.comment-toggle-check.hidden{:type => "checkbox", :id => "comments-toggle-id-#{medium.id}"}
                .media-comment-section{:id => "comments-id-#{medium.id}"}
                  - if current_user
                    .row-fluid.m-top-20
                      .col-sm-2
                        .timeline-teaser{style: "background-image:url(#{current_user.avatar.url})"}
                      .col-sm-10
                        = render :partial => 'comments/form', :locals => { :comment => Comment.build_from(medium, current_user.id, "") }
                  - else
                    = render :partial => 'comments/form_login'
                  = render :partial => 'comments/comment', :collection => medium.root_comments.order('created_at desc'), :as => :comment, :locals => { :reel_user => @user.id }
          - else
            .row.media-container{:id => "media-#{medium.id}"}
              .section-description.col-sm-2
                %p= medium.created_at.strftime("%b %-d, %Y")
                -if current_user && current_user.id == @user.id
                  %a.media-edit{"data-toggle" => "modal", "data-target" => "#edit-modal", "data-medium" => "#{medium.id}"}
                    %i.fa.fa-pencil-square-o
                    Edit
                %h4= medium.title
                .media-engagement-icon.hidden-xs
                  = render partial: 'shared/engagement_icons', :locals => { :medium => medium, :title => "#{medium.title}", :like_path => like_story_path(medium), :share_image => "#{medium.photo.url}"}

              .section-media.col-sm-10
                %p.story-container= sanitize(medium.body)
                .media-engagement-icon.visible-xs
                  = render partial: 'shared/engagement_icons', :locals => { :medium => medium, :title => "#{medium.title}", :like_path => like_story_path(medium), :share_image => "#{medium.photo.url}"}
                %input.comment-toggle-check.hidden{:type => "checkbox", :id => "comments-toggle-id-#{medium.id}"}
                .media-comment-section{:id => "comments-id-#{medium.id}"}
                  - if current_user
                    .row-fluid.m-top-20
                      .col-sm-2
                        .timeline-teaser{style: "background-image:url(#{current_user.avatar.url})"}
                      .col-sm-10
                        = render :partial => 'comments/form', :locals => { :comment => Comment.build_from(medium, current_user.id, "") }
                  - else
                    = render :partial => 'comments/form_login'
                  = render :partial => 'comments/comment', :collection => medium.root_comments.order('created_at desc'), :as => :comment, :locals => { :reel_user => @user.id }
        -if medium.is_a? Video
          .row.media-container{:id => "media-#{medium.id}"}
            .section-description.col-sm-2
              .timeline-teaser{:style => "background-image: url(#{medium.screenshot_url}); background-size: 180%;"}
              %p= medium.created_at.strftime("%b %-d, %Y")
              -if current_user && current_user.id == @user.id
                %a.media-edit{"data-toggle" => "modal", "data-target" => "#edit-modal", "data-medium" => "#{medium.id}"}
                  %i.fa.fa-pencil-square-o
                  Edit
              %p.timeline-description= truncate(medium.description, length: 250)
              .media-engagement-icon.hidden-xs
                = render partial: 'shared/engagement_icons', :locals => { :medium => medium, :title => "#{truncate(medium.description, length: 25)}", :like_path => like_video_path(medium), :share_image => "#{medium.screenshot_url}"}
            .section-media.col-sm-10
              %iframe{"src" => "#{medium.embed_url}?rel=0&amp;showinfo=0", "frameborder" => "0"}
              .media-engagement-icon.visible-xs
                = render partial: 'shared/engagement_icons', :locals => { :medium => medium, :title => "#{truncate(medium.description, length: 25)}", :like_path => like_video_path(medium), :share_image => "#{medium.screenshot_url}"}
              %input.comment-toggle-check.hidden{:type => "checkbox", :id => "comments-toggle-id-#{medium.id}"}
              .media-comment-section{:id => "comments-id-#{medium.id}"}
                - if current_user
                  .row-fluid.m-top-20
                    .col-sm-2
                      .timeline-teaser{style: "background-image:url(#{current_user.avatar.url})"}
                    .col-sm-10
                      = render :partial => 'comments/form', :locals => { :comment => Comment.build_from(medium, current_user.id, "") }
                - else
                  = render :partial => 'comments/form_login'
                = render :partial => 'comments/comment', :collection => medium.root_comments.order('created_at desc'), :as => :comment, :locals => { :reel_user => @user.id }
  - if current_user && current_user.id == @user.id
    %section.timeline-bottom.timeline-blank
  - else
    %section.timeline-bottom.container
      .row
        .col-sm-12
          #timeline-bottom-teaser.text-center
            %h3
              Like what you see? Here are more reels from
              = link_to user_path(@reel.user) do
                = @user.first_name + " " + @user.last_name + "."
      .content-container.tab-pane.active#work
        .tab-content
          .tab-pane.active#reels
            - @user.reels.each do |reel|
              =render :partial => 'shared/teaser', :locals => {:reel => reel}
            .jumbotron.bottom-jumbotron-cta.text-center
              %h2
                Feeling Inspired? Share Your Passion!
              %small
                Stories, videos, images. Anything goes. It's easy & fun!
              %br
              = link_to new_reel_path do
                .teaser
                  %i.fa.fa-plus
                  %br
                  Create a reel
